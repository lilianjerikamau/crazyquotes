{"version":3,"sources":["./src/app/the-quote/the-quote.component.ts","./src/app/the-quote/the-quote.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/quote-detail/quote-detail.component.ts","./src/app/quote-detail/quote-detail.component.html","./src/app/app.module.ts","./src/app/datepipe.pipe.ts","./src/app/date-pipe.pipe.ts","./src/app/quotes-form/quotes-form.component.ts","./src/app/quotes-form/quotes-form.component.html","./src/app/app-routing.module.ts","./src/app/quote.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component ,OnInit} from '@angular/core';\nimport { Quote } from '../quote';\n\n\n@Component({\n  selector: 'app-the-quote',\n  templateUrl: './the-quote.component.html',\n  styleUrls: ['./the-quote.component.css']\n})\nexport class TheQuoteComponent implements OnInit {\n  \n  title = \"welcome to crazy quotes\";\n   quotes:Quote[] = [\n    new Quote (1,'Lilian','Progress','Slow progress is still progress','Albert Einstein', new Date(2019,7,12),0,0),\n    new Quote (2,'Wendy','Personality','Be the person yor dog thinks you are.','Max Frisch',new Date(2019,7,14),0,0),\n    new Quote (3,'Mikey','Life','Everything is going to be alright.','Libby Larsen',new Date(2019,6,3),0,0),\n    new Quote (4,'Beatrice','Communication','Be loyal to your future not your past.','Clay Shirky',new Date(2019,7,7),0,0),\n    new Quote (5,'Charles','Dear self','Less fear more hope.','Harold Abelson',new Date(2019,7,17),0,0),\n    new Quote (6,'Jaycee','Tech and life','One day at a timegit.','Alice Kahn',new Date(2019,7,15),0,0)\n\n   ];\n  \n   get arrangeQuotes() {\n    return this.quotes.sort((a, b) => {\n      return <any>new Date(b.datePosted) - <any>new Date(a.datePosted);\n    });\n  }\n     createQuote(quote:any){\n    let arraysize = this.quotes.length;\n    quote.id = arraysize+1;\n    quote.completeDate = new Date(quote.completeDate)\n    this.quotes.push(quote)\n  }\n  quoteDelete(isRead:any, index:number){\n    if (isRead) {\n      let toDelete = confirm(`Are you sure you want to delete this Quote?`)\n      if(toDelete){\n        this.quotes.splice(index,1);\n      }\n      \n    }\n  }\n \n  displayInfo(index:number) {\n    this.quotes[index].showDetails = !this.quotes[index].showDetails;\n  }\n  \n   constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n","<div class=\"overlay\">\n  <h1 class=\"text-center\">\n    {{ title | titlecase }}\n  </h1>\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-sm-3\">\n        <app-quotes-form (add)=\"createQuote($event)\"></app-quotes-form>\n      </div>\n      <div class=\"col-sm-9\">\n        <div class=\"cards\">\n          <div\n            *ngFor=\"let quote of arrangeQuotes; let i = index\"\n            class=\"card\"\n            style=\"width: 24rem\"\n          >\n            <div class=\"card-body\">\n              <h4 class=\"card-title\" appHighlightQoute>\n                {{ quote.title }}\n                <button (click)=\"displayInfo(i)\" class=\"btn btn-info btn-sm\">\n                  See More\n                </button>\n                <!-- <app-quote-detail\n                  *ngIf=\"quote.showInfo\"\n                  [quoty]=\"quote\"\n                ></app-quote-detail> -->\n              </h4>\n              <p class=\"card-text\" id=\"param\">{{ quote.quote }}</p>\n              <app-quote-detail\n                *ngIf=\"quote.showDetails\"\n                [quoteDetail]=\"quote\"\n                (isRead)=\"quoteDelete($event, i)\"\n              ></app-quote-detail>\n              <span class=\"card-subtitle mb-2\"\n                >Posted by: <span id=\"name\">{{ quote.name }}</span\n                ><span id=\"date\"\n                  >on:\n                  <span id=\"datecolor\">{{\n                    quote.datePosted | date: \"short\"\n                  }}</span></span\n                ></span\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  // title = 'crazy-quotes';\n}\n","<router-outlet></router-outlet>\n<app-the-quote></app-the-quote>\n","import { Component,OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Quote } from '../quote';\n\n\n@Component({\n  selector: 'app-quote-detail',\n  templateUrl: './quote-detail.component.html',\n  styleUrls: ['./quote-detail.component.css']\n})\nexport class QuoteDetailComponent implements OnInit {\n   @Input() quoteDetail!: Quote;\n  @Output() isRead = new EventEmitter<boolean>();\n  deleteQuote(read:boolean){\n    this.isRead.emit(read);\n  }\n  upvote(){\n    this.quoteDetail.likes+=1;\n  }\n  downvote(){\n    this.quoteDetail.dislikes+=1;\n  }\n  \n  constructor() { }\n\n  ngOnInit()  {\n  }\n\n}\n","<h6 class=\"card-subtitle mb-2 text-muted\">\n  - {{ quoteDetail.author }}\n  <span id=\"when\"\n    >Posted: {{ quoteDetail.datePosted | datePipe }} days ago.</span\n  >\n</h6>\n<div class=\"container-fluid\" id=\"buttons\">\n  <button class=\"btn btn-sm btn-success\" (click)=\"upvote()\">\n    {{ quoteDetail.likes }} <i class=\"fa fa-thumbs-up\" id=\"like\"></i>\n  </button>\n  <button class=\"btn btn-sm btn-info\" id=\"hate\" (click)=\"downvote()\">\n    {{ quoteDetail.dislikes }} <i class=\"fa fa-thumbs-down\" id=\"dislike\"></i>\n  </button>\n  <button class=\"btn btn-sm btn-danger\" id=\"del\" (click)=\"deleteQuote(true)\">\n    <i class=\"fa fa-trash\" id=\"delete\"></i>\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TheQuoteComponent } from './the-quote/the-quote.component';\nimport { QuoteDetailComponent } from './quote-detail/quote-detail.component';\nimport { DatepipePipe } from './datepipe.pipe';\nimport { DatePipePipe } from './date-pipe.pipe';\nimport { QuotesFormComponent } from './quotes-form/quotes-form.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TheQuoteComponent,\n    QuoteDetailComponent,\n    DatepipePipe,\n    DatePipePipe,\n    QuotesFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n     FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'datepipe'\n})\nexport class DatepipePipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'datePipe'\n})\nexport class DatePipePipe implements PipeTransform {\n\n  transform(value: unknown, ...args: unknown[]): unknown {\n    return null;\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Quote } from '../quote';\n\n@Component({\n  selector: 'app-quotes-form',\n  templateUrl: './quotes-form.component.html',\n  styleUrls: ['./quotes-form.component.css']\n})\nexport class QuotesFormComponent implements OnInit {\n   quoted = new Quote(0,\"\",\"\",\"\",\"\",new Date(),0,0);\n  @Output() add = new EventEmitter<Quote>();\n\n  addQuote(){\nthis.add.emit(this.quoted);\nthis.quoted = new Quote(0,\"\",\"\",\"\",\"\",new Date(),0,0);\n  }\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n  <h2 class=\"heading\">Add Quote</h2>\n  <!-- <hr> -->\n  <form (ngSubmit)=\"addQuote(); quotesForm.resetForm({})\" #quotesForm=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"name\">Your Name</label>\n      <input\n        type=\"text\"\n        required\n        class=\"form-control\"\n        id=\"name\"\n        [(ngModel)]=\"quoted.name\"\n        name=\"name\"\n        #name=\"ngModel\"\n        minlength=\"3\"\n      />\n      <div *ngIf=\"name.invalid && name.dirty\" class=\"alert alert-danger\">\n        <div *ngIf=\"name.errors?.required\">Your name is required.</div>\n        <div *ngIf=\"name.errors?.minlength\">\n          Name is at least 3 characters long.\n        </div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Quote Tittle</label>\n      <input\n        type=\"text\"\n        required\n        class=\"form-control\"\n        id=\"title\"\n        [(ngModel)]=\"quoted.title\"\n        name=\"title\"\n        #title=\"ngModel\"\n      />\n      <div *ngIf=\"title.invalid && title.dirty\" class=\"alert alert-danger\">\n        <div *ngIf=\"title.errors?.required\">Title is required.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Quote</label>\n      <textarea\n        class=\"form-control\"\n        id=\"quote\"\n        rows=\"2\"\n        required\n        [(ngModel)]=\"quoted.quote\"\n        name=\"quote\"\n        #quote=\"ngModel\"\n      ></textarea>\n      <div *ngIf=\"quote.invalid && quote.dirty\" class=\"alert alert-danger\">\n        <div *ngIf=\"quote.errors?.required\">Quote can not be empty.</div>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Quote Author</label>\n      <input\n        type=\"text\"\n        required\n        class=\"form-control\"\n        id=\"author\"\n        [(ngModel)]=\"quoted.author\"\n        name=\"author\"\n        #author=\"ngModel\"\n      />\n      <div *ngIf=\"title.invalid && title.dirty\" class=\"alert alert-danger\">\n        <div *ngIf=\"title.errors?.required\">Author Name is required.</div>\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-sm btn-success\">Add Quote</button>\n  </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\n\n\nexport class Quote {\n  showDetails: boolean;\n  completeDate?: Date;\n  constructor(public id:number,public name:string,public title:string,public quote:string,public author:string, public datePosted: Date,public likes:number, public dislikes:number){\n      this.showDetails=false;\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}